<!--
 ~ Copyright (C) 2005 - 2012 Jaspersoft Corporation. All rights reserved.
 ~ http://www.jaspersoft.com.
 ~ Licensed under commercial Jaspersoft Subscription License Agreement
  -->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd">
	<!-- ############ SSO auth ############
      - Sample configuration of SSO via JasperServer API
    -->
	<bean id="proxyPreAuthenticatedProcessingFilter" class="com.jaspersoft.jasperserver.ps.OAuth.OAuthPreAuthenticationFilter">
		<property name="externalDataSynchronizer" ref="externalDataSynchronizer"/>
		<property name="authenticationManager" ref="oAuthAuthenticationManager"/>
		<property name="authenticationFailureUrl">
			<value>/login.html?error=1</value>
		</property>
		<property name="defaultTargetUrl">
			<value>/loginsuccess.html</value>
		</property>
		<property name="filterProcessesUrl">
			<value>/oauth</value>
		</property>
		<property name="authorization_location">
			<value>https://dev-663333.oktapreview.com/oauth2/v1/authorize</value>
		</property>
		<property name="client_id">
			<value>clientidfromIDP</value>
		</property>
		<property name="redirecturl">
			<value>http://localhost:8080/jasperserver-pro/oauth</value>
		</property>
		<property name="token_location">
			<value>https://dev-663333.oktapreview.com/oauth2/v1/token</value>
		</property>
		<property name="clientsecret">
			<value>clientsecretfromIDP</value>
		</property>
		<property name="scopes">
			<!--Todo-->
			<value>openid profile</value>
			<!-- <value>jaspersoft</value> -->
		</property>
	</bean>
	<bean id="proxyAuthenticationProcessingFilter" class="com.jaspersoft.jasperserver.api.security.EncryptionAuthenticationProcessingFilter">
		<property name="authenticationManager" ref="authenticationManager"/>
		<property name="postOnly" value="false"/>
		<property name="authenticationFailureHandler" ref="failureHandler"/>
		<property name="authenticationSuccessHandler" ref="successHandler"/>
		<property name="filterProcessesUrl" value="/j_spring_security_check"/>
		<property name="allowSessionCreation" value="true"/>
		<property name="sessionAuthenticationStrategy" ref="sas"/>
	</bean>
	<bean id="oAuthAuthenticationProvider" class="com.jaspersoft.jasperserver.ps.OAuth.OAuthAuthenticationProvider">
		<property name="accessTokenValidator" ref="OAuthAccessTokenValidator"/>
		<property name="userDetailsService" ref="oAuthUserDetailsService"/>
	</bean>
	<bean id="OAuthAccessTokenValidator" class="com.jaspersoft.jasperserver.ps.OAuth.OAuthAccessTokenValidator">
		<property name="userdetails_location">
			<value>https://dev-663333.oktapreview.com/oauth2/v1/userinfo</value>
		</property>
		<property name="useBearerHeader">
			<value>true</value>
		</property>
	</bean>
	<bean id="oAuthUserDetailsService" class="com.jaspersoft.jasperserver.ps.OAuth.OAuthUserDetailsServiceImpl">
       </bean>
	<bean id="oAuthAuthenticationManager" class="com.jaspersoft.jasperserver.api.security.externalAuth.wrappers.spring.JSProviderManager">
		<constructor-arg index="0">
			<list>
				<ref bean="oAuthAuthenticationProvider"/>
				<ref bean="${bean.daoAuthenticationProvider}"/>
				<!-- anonymousAuthenticationProvider only needed if filterInvocationInterceptor.alwaysReauthenticate is set to true
                    <ref bean="anonymousAuthenticationProvider"/>-->
			</list>
		</constructor-arg>
	</bean>
	<bean id="externalDataSynchronizer" class="com.jaspersoft.jasperserver.ps.OAuth.OAuthMTExternalDataSynchronizerImpl">
		<property name="externalUserProcessors">
			<list>
				<ref bean="externalTenantSetupProcessor"/>
				<ref bean="mtExternalUserSetupProcessor"/>
				<!-- OPTIONAL processor: comment out if no profile attributes are expected
                  <ref local="externalProfileAttributeProcessor"/>  -->
				<!-- uncomment for user home folder creation processing
                <ref local="externalUserFolderProcessor"/>
				-->
			</list>
		</property>
	</bean>
	<bean id="abstractExternalProcessor" class="com.jaspersoft.jasperserver.api.security.externalAuth.processors.AbstractExternalUserProcessor" abstract="true">
		<property name="repositoryService" ref="${bean.repositoryService}"/>
		<property name="userAuthorityService" ref="${bean.userAuthorityService}"/>
		<property name="tenantService" ref="${bean.tenantService}"/>
		<property name="profileAttributeService" ref="profileAttributeService"/>
		<property name="objectPermissionService" ref="objectPermissionService"/>
	</bean>
	<bean id="mtExternalUserSetupProcessor" class="com.jaspersoft.jasperserver.multipleTenancy.security.externalAuth.processors.MTExternalUserSetupProcessor" parent="abstractExternalProcessor">
		<!--Default permitted role characters; others are removed. Change regular expression to allow other chars.
                    <property name="permittedExternalRoleNameRegex" value="[A-Za-z0-9_]+"/>-->
		<property name="organizationRoleMap">
			<map>
				<!-- Example of mapping customer roles to JRS roles -->
				<entry>
					<key>
						<value>ROLE_ADMIN_EXTERNAL_ORGANIZATION</value>
					</key>
					<!-- JRS role that the <key> external role is mapped to-->
					<!--<value>ROLE_ADMINISTRATOR</value>-->
					<value>ROLE_ADMINISTRATOR|*</value>
				</entry>
			</map>
		</property>
		<property name="userAuthorityService">
			<ref bean="${bean.internalUserAuthorityService}"/>
		</property>
		<property name="defaultInternalRoles">
			<list>
				<value>ROLE_USER</value>
			</list>
		</property>
	</bean>
	<bean id="externalUserFolderProcessor" class="com.jaspersoft.jasperserver.api.security.externalAuth.processors.ExternalUserFolderProcessor" parent="abstractExternalProcessor">
		<property name="repositoryService" ref="${bean.unsecureRepositoryService}"/>
	</bean>
	<bean id="externalTenantSetupProcessor" class="com.jaspersoft.jasperserver.multipleTenancy.security.externalAuth.processors.MTExternalTenantSetupProcessor" parent="abstractExternalProcessor">
		<property name="multiTenancyService">
			<ref bean="internalMultiTenancyService"/>
		</property>
		<property name="defaultOrganization" value="organization_1"/>
		<property name="tenantIdNotSupportedSymbols" value="#{configurationBean.tenantIdNotSupportedSymbols}"/>
		<!-- User credentials are setup in js.externalAuth.properties-->
		<property name="externalTenantSetupUsers">
			<list>
				<bean class="com.jaspersoft.jasperserver.multipleTenancy.security.externalAuth.processors.MTAbstractExternalProcessor.ExternalTenantSetupUser">
					<property name="username" value="${new.tenant.user.name.1}"/>
					<property name="fullName" value="${new.tenant.user.fullname.1}"/>
					<property name="password" value="${new.tenant.user.password.1}"/>
					<property name="emailAddress" value="${new.tenant.user.email.1}"/>
					<property name="roleSet">
						<set>
							<value>ROLE_ADMINISTRATOR</value>
							<value>ROLE_USER</value>
						</set>
					</property>
				</bean>
			</list>
		</property>
	</bean>
	<bean id="externalProfileAttributeProcessor" class="com.jaspersoft.jasperserver.api.security.externalAuth.processors.ExternalProfileAttributeProcessor" parent="abstractExternalProcessor">
    </bean>
	<!--
	<bean id="externalAuthProperties" class="com.jaspersoft.jasperserver.api.security.externalAuth.ExternalAuthProperties">
       
       
        <property name="logoutUrl" value="<logout_service_url>"/>
    </bean>
	-->
</beans>